/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>, '//' | '//chat' | '//drive/' | '//mypage' | '//mypage/' | '//mypage/account' | '//mypage/change-password' | '//mypage/chat' | '//mypage/security' | '//todo' | '//todo/board' | '//todo/calendar' | '//todo/list' | '//todo/table/' | '//todo/table/[todo_id]' | '//todo/table/add' | '//todo/whiteboard'>,
    '//': RouteRecordInfo<'//', '/', Record<never, never>, Record<never, never>>,
    '//chat': RouteRecordInfo<'//chat', '/chat', Record<never, never>, Record<never, never>>,
    '//drive/': RouteRecordInfo<'//drive/', '/drive', Record<never, never>, Record<never, never>>,
    '//mypage': RouteRecordInfo<'//mypage', '/mypage', Record<never, never>, Record<never, never>, '//mypage/' | '//mypage/account' | '//mypage/change-password' | '//mypage/chat' | '//mypage/security'>,
    '//mypage/': RouteRecordInfo<'//mypage/', '/mypage', Record<never, never>, Record<never, never>>,
    '//mypage/account': RouteRecordInfo<'//mypage/account', '/mypage/account', Record<never, never>, Record<never, never>>,
    '//mypage/change-password': RouteRecordInfo<'//mypage/change-password', '/mypage/change-password', Record<never, never>, Record<never, never>>,
    '//mypage/chat': RouteRecordInfo<'//mypage/chat', '/mypage/chat', Record<never, never>, Record<never, never>>,
    '//mypage/security': RouteRecordInfo<'//mypage/security', '/mypage/security', Record<never, never>, Record<never, never>>,
    '//todo': RouteRecordInfo<'//todo', '/todo', Record<never, never>, Record<never, never>, '//todo/board' | '//todo/calendar' | '//todo/list' | '//todo/table/' | '//todo/table/[todo_id]' | '//todo/table/add' | '//todo/whiteboard'>,
    '//todo/board': RouteRecordInfo<'//todo/board', '/todo/board', Record<never, never>, Record<never, never>>,
    '//todo/calendar': RouteRecordInfo<'//todo/calendar', '/todo/calendar', Record<never, never>, Record<never, never>>,
    '//todo/list': RouteRecordInfo<'//todo/list', '/todo/list', Record<never, never>, Record<never, never>>,
    '//todo/table/': RouteRecordInfo<'//todo/table/', '/todo/table', Record<never, never>, Record<never, never>>,
    '//todo/table/[todo_id]': RouteRecordInfo<'//todo/table/[todo_id]', '/todo/table/:todo_id', { todo_id: ParamValue<true> }, { todo_id: ParamValue<false> }>,
    '//todo/table/add': RouteRecordInfo<'//todo/table/add', '/todo/table/add', Record<never, never>, Record<never, never>>,
    '//todo/whiteboard': RouteRecordInfo<'//todo/whiteboard', '/todo/whiteboard', Record<never, never>, Record<never, never>>,
    '/(auth)/login': RouteRecordInfo<'/(auth)/login', '/login', Record<never, never>, Record<never, never>>,
    '/(auth)/signup': RouteRecordInfo<'/(auth)/signup', '/signup', Record<never, never>, Record<never, never>>,
    '/[...404]': RouteRecordInfo<'/[...404]', '/:404(.*)', { 404: ParamValue<true> }, { 404: ParamValue<false> }>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/page/index.vue': {
      routes: '/' | '//' | '//mypage/' | '//todo/table/' | '//drive/' | '//todo/table/[todo_id]' | '//mypage/account' | '//todo/table/add' | '//todo/board' | '//todo/calendar' | '//mypage/change-password' | '//chat' | '//mypage/chat' | '//drive' | '//todo/list' | '//mypage' | '//mypage/security' | '//todo/table' | '//todo' | '//todo/whiteboard'
      views: 'default'
    }
    'src/page/index/index.vue': {
      routes: '//'
      views: never
    }
    'src/page/index/chat.vue': {
      routes: '//chat'
      views: never
    }
    'src/page/index/drive/index.vue': {
      routes: '//drive/'
      views: never
    }
    'src/page/index/mypage.vue': {
      routes: '//mypage' | '//mypage/' | '//mypage/account' | '//mypage/change-password' | '//mypage/chat' | '//mypage/security'
      views: 'default'
    }
    'src/page/index/mypage/index.vue': {
      routes: '//mypage/'
      views: never
    }
    'src/page/index/mypage/account.vue': {
      routes: '//mypage/account'
      views: never
    }
    'src/page/index/mypage/change-password.vue': {
      routes: '//mypage/change-password'
      views: never
    }
    'src/page/index/mypage/chat.vue': {
      routes: '//mypage/chat'
      views: never
    }
    'src/page/index/mypage/security.vue': {
      routes: '//mypage/security'
      views: never
    }
    'src/page/index/todo.vue': {
      routes: '//todo' | '//todo/table/' | '//todo/table/[todo_id]' | '//todo/table/add' | '//todo/board' | '//todo/calendar' | '//todo/list' | '//todo/table' | '//todo/whiteboard'
      views: 'default'
    }
    'src/page/index/todo/board.vue': {
      routes: '//todo/board'
      views: never
    }
    'src/page/index/todo/calendar.vue': {
      routes: '//todo/calendar'
      views: never
    }
    'src/page/index/todo/list.vue': {
      routes: '//todo/list'
      views: never
    }
    'src/page/index/todo/table/index.vue': {
      routes: '//todo/table/'
      views: never
    }
    'src/page/index/todo/table/[todo_id].vue': {
      routes: '//todo/table/[todo_id]'
      views: never
    }
    'src/page/index/todo/table/add.vue': {
      routes: '//todo/table/add'
      views: never
    }
    'src/page/index/todo/whiteboard.vue': {
      routes: '//todo/whiteboard'
      views: never
    }
    'src/page/(auth)/login.vue': {
      routes: '/(auth)/login'
      views: never
    }
    'src/page/(auth)/signup.vue': {
      routes: '/(auth)/signup'
      views: never
    }
    'src/page/[...404].vue': {
      routes: '/[...404]'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
